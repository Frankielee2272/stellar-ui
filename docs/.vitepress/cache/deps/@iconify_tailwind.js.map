{
  "version": 3,
  "sources": ["browser-external:fs", "../../../../node_modules/.pnpm/@iconify+tailwind@0.1.3/node_modules/@iconify/tailwind/dist/plugin.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\n* (c) Iconify for Tailwind CSS\n*\n* For the full copyright and license information, please view the license.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under MIT.\n*\n* @license MIT\n* @version 0.1.3\n*/\n'use strict';\n\nvar plugin = require('tailwindcss/plugin');\nvar fs = require('fs');\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\nfunction getIconData(data, name) {\n  if (data.icons[name]) {\n    return internalGetIconData(data, name, []);\n  }\n  const tree = getIconsTree(data, [name])[name];\n  return tree ? internalGetIconData(data, name, tree) : null;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nfunction getCommonCSSRules(options) {\n  const result = {\n    display: \"inline-block\",\n    width: \"1em\",\n    height: \"1em\"\n  };\n  const varName = options.varName;\n  if (options.pseudoSelector) {\n    result[\"content\"] = \"''\";\n  }\n  switch (options.mode) {\n    case \"background\":\n      if (varName) {\n        result[\"background-image\"] = \"var(--\" + varName + \")\";\n      }\n      result[\"background-repeat\"] = \"no-repeat\";\n      result[\"background-size\"] = \"100% 100%\";\n      break;\n    case \"mask\":\n      result[\"background-color\"] = \"currentColor\";\n      if (varName) {\n        result[\"mask-image\"] = result[\"-webkit-mask-image\"] = \"var(--\" + varName + \")\";\n      }\n      result[\"mask-repeat\"] = result[\"-webkit-mask-repeat\"] = \"no-repeat\";\n      result[\"mask-size\"] = result[\"-webkit-mask-size\"] = \"100% 100%\";\n      break;\n  }\n  return result;\n}\nfunction generateItemCSSRules(icon, options) {\n  const result = {};\n  const varName = options.varName;\n  if (!options.forceSquare && icon.width !== icon.height) {\n    result[\"width\"] = calculateSize(\"1em\", icon.width / icon.height);\n  }\n  const svg = iconToHTML(\n    icon.body.replace(/currentColor/g, options.color || \"black\"),\n    {\n      viewBox: `${icon.left} ${icon.top} ${icon.width} ${icon.height}`,\n      width: icon.width.toString(),\n      height: icon.height.toString()\n    }\n  );\n  const url = svgToURL(svg);\n  if (varName) {\n    result[\"--\" + varName] = url;\n  } else {\n    switch (options.mode) {\n      case \"background\":\n        result[\"background-image\"] = url;\n        break;\n      case \"mask\":\n        result[\"mask-image\"] = result[\"-webkit-mask-image\"] = url;\n        break;\n    }\n  }\n  return result;\n}\n\nconst commonSelector = \".icon--{prefix}\";\nconst iconSelector = \".icon--{prefix}--{name}\";\nconst defaultSelectors = {\n  commonSelector,\n  iconSelector,\n  overrideSelector: commonSelector + iconSelector\n};\nfunction getIconsCSSData(iconSet, names, options = {}) {\n  const css = [];\n  const errors = [];\n  const palette = options.color ? true : iconSet.info?.palette;\n  let mode = options.mode || typeof palette === \"boolean\" && (palette ? \"background\" : \"mask\");\n  if (!mode) {\n    for (let i = 0; i < names.length; i++) {\n      const icon = getIconData(iconSet, names[i]);\n      if (icon) {\n        mode = icon.body.includes(\"currentColor\") ? \"mask\" : \"background\";\n        break;\n      }\n    }\n    if (!mode) {\n      mode = \"mask\";\n      errors.push(\n        \"/* cannot detect icon mode: not set in options and icon set is missing info, rendering as \" + mode + \" */\"\n      );\n    }\n  }\n  let varName = options.varName;\n  if (varName === void 0 && mode === \"mask\") {\n    varName = \"svg\";\n  }\n  const newOptions = {\n    ...options,\n    // Override mode and varName\n    mode,\n    varName\n  };\n  const { commonSelector: commonSelector2, iconSelector: iconSelector2, overrideSelector } = newOptions.iconSelector ? newOptions : defaultSelectors;\n  const iconSelectorWithPrefix = iconSelector2.replace(\n    /{prefix}/g,\n    iconSet.prefix\n  );\n  const commonRules = getCommonCSSRules(newOptions);\n  const hasCommonRules = commonSelector2 && commonSelector2 !== iconSelector2;\n  const commonSelectors = /* @__PURE__ */ new Set();\n  if (hasCommonRules) {\n    css.push({\n      selector: commonSelector2.replace(/{prefix}/g, iconSet.prefix),\n      rules: commonRules\n    });\n  }\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    const iconData = getIconData(iconSet, name);\n    if (!iconData) {\n      errors.push(\"/* Could not find icon: \" + name + \" */\");\n      continue;\n    }\n    const rules = generateItemCSSRules(\n      { ...defaultIconProps, ...iconData },\n      newOptions\n    );\n    let requiresOverride = false;\n    if (hasCommonRules && overrideSelector) {\n      for (const key in rules) {\n        if (key in commonRules) {\n          requiresOverride = true;\n        }\n      }\n    }\n    const selector = (requiresOverride && overrideSelector ? overrideSelector.replace(/{prefix}/g, iconSet.prefix) : iconSelectorWithPrefix).replace(/{name}/g, name);\n    css.push({\n      selector,\n      rules\n    });\n    if (!hasCommonRules) {\n      commonSelectors.add(selector);\n    }\n  }\n  const result = {\n    css,\n    errors\n  };\n  if (!hasCommonRules && commonSelectors.size) {\n    const selector = Array.from(commonSelectors).join(\n      newOptions.format === \"compressed\" ? \",\" : \", \"\n    );\n    result.common = {\n      selector,\n      rules: commonRules\n    };\n  }\n  return result;\n}\n\nfunction locateIconSet(prefix) {\n    try {\n        const main = require.resolve(`@iconify-json/${prefix}/icons.json`);\n        const info = require.resolve(`@iconify-json/${prefix}/info.json`);\n        return {\n            main,\n            info,\n        };\n    }\n    catch { }\n    try {\n        const main = require.resolve(`@iconify/json/json/${prefix}.json`);\n        return {\n            main,\n        };\n    }\n    catch { }\n}\n/**\n * Cache for loaded icon sets\n *\n * Tailwind CSS can send multiple separate requests to plugin, this will\n * prevent same data from being loaded multiple times.\n *\n * Key is filename, not prefix!\n */\nconst cache = Object.create(null);\n/**\n * Load icon set\n */\nfunction loadIconSet(prefix, options) {\n    let filename;\n    // Check for custom icon set\n    const customIconSet = options.iconSets?.[prefix];\n    if (customIconSet) {\n        switch (typeof customIconSet) {\n            case 'function': {\n                // Callback. Store result in options to avoid loading it again\n                const result = customIconSet();\n                options.iconSets[prefix] = result;\n                return result;\n            }\n            case 'string': {\n                // Filename to load it from\n                filename = {\n                    main: customIconSet,\n                };\n                break;\n            }\n            default:\n                return customIconSet;\n        }\n    }\n    else {\n        // Find icon set\n        filename = locateIconSet(prefix);\n    }\n    if (!filename) {\n        return;\n    }\n    const main = typeof filename === 'string' ? filename : filename.main;\n    // Check for cache\n    if (cache[main]) {\n        return cache[main];\n    }\n    // Attempt to load it\n    try {\n        const result = JSON.parse(fs.readFileSync(main, 'utf8'));\n        if (!result.info && typeof filename === 'object' && filename.info) {\n            // Load info from a separate file\n            result.info = JSON.parse(fs.readFileSync(filename.info, 'utf8'));\n        }\n        cache[main] = result;\n        return result;\n    }\n    catch { }\n}\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n\n/**\n * Get icon names from list\n */\nfunction getIconNames(icons) {\n    const prefixes = Object.create(null);\n    // Add entry\n    const add = (prefix, name) => {\n        if (typeof prefix === 'string' &&\n            prefix.match(matchIconName) &&\n            typeof name === 'string' &&\n            name.match(matchIconName)) {\n            (prefixes[prefix] || (prefixes[prefix] = new Set())).add(name);\n        }\n    };\n    // Comma or space separated string\n    let iconNames;\n    if (typeof icons === 'string') {\n        iconNames = icons.split(/[\\s,.]/);\n    }\n    else if (icons instanceof Array) {\n        iconNames = [];\n        // Split each array entry\n        icons.forEach((item) => {\n            item.split(/[\\s,.]/).forEach((name) => iconNames.push(name));\n        });\n    }\n    else {\n        return;\n    }\n    // Parse array\n    if (iconNames?.length) {\n        iconNames.forEach((icon) => {\n            if (!icon.trim()) {\n                return;\n            }\n            // Attempt prefix:name split\n            const nameParts = icon.split(':');\n            if (nameParts.length === 2) {\n                add(nameParts[0], nameParts[1]);\n                return;\n            }\n            // Attempt icon class: .icon--{prefix}--{name}\n            // with or without dot\n            const classParts = icon.split('--');\n            if (classParts[0].match(/^\\.?icon$/)) {\n                if (classParts.length === 3) {\n                    add(classParts[1], classParts[2]);\n                    return;\n                }\n                if (classParts.length === 2) {\n                    // Partial match\n                    return;\n                }\n            }\n            // Throw error\n            throw new Error(`Cannot resolve icon: \"${icon}\"`);\n        });\n    }\n    else {\n        return;\n    }\n    return prefixes;\n}\n\n/**\n * Get CSS rules for icons list\n */\nfunction getCSSRulesForIcons(icons, options = {}) {\n    const rules = Object.create(null);\n    // Get all icons\n    const prefixes = getIconNames(icons);\n    // Parse all icon sets\n    for (const prefix in prefixes) {\n        const iconSet = loadIconSet(prefix, options);\n        if (!iconSet) {\n            throw new Error(`Cannot load icon set for \"${prefix}\". Install \"@iconify-json/${prefix}\" as dev dependency?`);\n        }\n        const generated = getIconsCSSData(iconSet, Array.from(prefixes[prefix]), options);\n        const result = generated.common\n            ? [generated.common, ...generated.css]\n            : generated.css;\n        result.forEach((item) => {\n            const selector = item.selector instanceof Array\n                ? item.selector.join(', ')\n                : item.selector;\n            rules[selector] = item.rules;\n        });\n    }\n    return rules;\n}\n\n/**\n * Get dynamic CSS rules\n */\nfunction getDynamicCSSRules(icon, options = {}) {\n    const nameParts = icon.split(/--|\\:/);\n    if (nameParts.length !== 2) {\n        throw new Error(`Invalid icon name: \"${icon}\"`);\n    }\n    const [prefix, name] = nameParts;\n    if (!(prefix.match(matchIconName) && name.match(matchIconName))) {\n        throw new Error(`Invalid icon name: \"${icon}\"`);\n    }\n    const iconSet = loadIconSet(prefix, options);\n    if (!iconSet) {\n        throw new Error(`Cannot load icon set for \"${prefix}\". Install \"@iconify-json/${prefix}\" as dev dependency?`);\n    }\n    const generated = getIconsCSSData(iconSet, [name], {\n        iconSelector: '.icon',\n    });\n    if (generated.css.length !== 1) {\n        throw new Error(`Cannot find \"${icon}\". Bad icon name?`);\n    }\n    return {\n        // Common rules\n        ...(options.overrideOnly || !generated.common?.rules\n            ? {}\n            : generated.common.rules),\n        // Icon rules\n        ...generated.css[0].rules,\n    };\n}\n\n/**\n * Generate styles for dynamic selector: class=\"icon-[mdi-light--home]\"\n */\nfunction addDynamicIconSelectors(options) {\n    const prefix = options?.prefix || 'icon';\n    return plugin(({ matchComponents }) => {\n        matchComponents({\n            [prefix]: (icon) => getDynamicCSSRules(icon, options),\n        });\n    });\n}\n/**\n * Generate styles for preset list of icons\n */\nfunction addCleanIconSelectors(icons, options) {\n    const rules = getCSSRulesForIcons(icons, options);\n    return plugin(({ addUtilities }) => {\n        addUtilities(rules);\n    });\n}\n\nexports.addCleanIconSelectors = addCleanIconSelectors;\nexports.addDynamicIconSelectors = addDynamicIconSelectors;\n"],
  "mappings": "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",
  "names": ["require_plugin"]
}
