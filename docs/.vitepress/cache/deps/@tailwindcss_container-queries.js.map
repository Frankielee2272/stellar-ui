{
  "version": 3,
  "sources": ["../../../../node_modules/@tailwindcss/container-queries/dist/index.js"],
  "sourcesContent": ["\"use strict\";\nvar _plugin = /*#__PURE__*/ _interopRequireDefault(require(\"tailwindcss/plugin\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nmodule.exports = (0, _plugin.default)(function containerQueries(param) {\n    var matchUtilities = param.matchUtilities, matchVariant = param.matchVariant, theme = param.theme;\n    var parseValue = function parseValue(value) {\n        var _value_match;\n        var _value_match_;\n        var numericValue = (_value_match_ = (_value_match = value.match(/^(\\d+\\.\\d+|\\d+|\\.\\d+)\\D+/)) === null || _value_match === void 0 ? void 0 : _value_match[1]) !== null && _value_match_ !== void 0 ? _value_match_ : null;\n        if (numericValue === null) return null;\n        return parseFloat(value);\n    };\n    var _theme;\n    var values = (_theme = theme(\"containers\")) !== null && _theme !== void 0 ? _theme : {};\n    matchUtilities({\n        \"@container\": function(value, param) {\n            var modifier = param.modifier;\n            return {\n                \"container-type\": value,\n                \"container-name\": modifier\n            };\n        }\n    }, {\n        values: {\n            DEFAULT: \"inline-size\",\n            normal: \"normal\"\n        },\n        modifiers: \"any\"\n    });\n    matchVariant(\"@\", function() {\n        var value = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\", modifier = (arguments.length > 1 ? arguments[1] : void 0).modifier;\n        var parsed = parseValue(value);\n        return parsed !== null ? \"@container \".concat(modifier !== null && modifier !== void 0 ? modifier : \"\", \" (min-width: \").concat(value, \")\") : [];\n    }, {\n        values: values,\n        sort: function sort(aVariant, zVariant) {\n            var a = parseFloat(aVariant.value);\n            var z = parseFloat(zVariant.value);\n            if (a === null || z === null) return 0;\n            // Sort values themselves regardless of unit\n            if (a - z !== 0) return a - z;\n            var _aVariant_modifier;\n            var aLabel = (_aVariant_modifier = aVariant.modifier) !== null && _aVariant_modifier !== void 0 ? _aVariant_modifier : \"\";\n            var _zVariant_modifier;\n            var zLabel = (_zVariant_modifier = zVariant.modifier) !== null && _zVariant_modifier !== void 0 ? _zVariant_modifier : \"\";\n            // Explicitly move empty labels to the end\n            if (aLabel === \"\" && zLabel !== \"\") {\n                return 1;\n            } else if (aLabel !== \"\" && zLabel === \"\") {\n                return -1;\n            }\n            // Sort labels alphabetically in the English locale\n            // We are intentionally overriding the locale because we do not want the sort to\n            // be affected by the machine's locale (be it a developer or CI environment)\n            return aLabel.localeCompare(zLabel, \"en\", {\n                numeric: true\n            });\n        }\n    });\n}, {\n    theme: {\n        containers: {\n            xs: \"20rem\",\n            sm: \"24rem\",\n            md: \"28rem\",\n            lg: \"32rem\",\n            xl: \"36rem\",\n            \"2xl\": \"42rem\",\n            \"3xl\": \"48rem\",\n            \"4xl\": \"56rem\",\n            \"5xl\": \"64rem\",\n            \"6xl\": \"72rem\",\n            \"7xl\": \"80rem\"\n        }\n    }\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,UAAwB,uBAAuB,gBAA6B;AAChF,aAAS,uBAAuB,KAAK;AACjC,aAAO,OAAO,IAAI,aAAa,MAAM;AAAA,QACjC,SAAS;AAAA,MACb;AAAA,IACJ;AACA,WAAO,WAAW,GAAG,QAAQ,SAAS,SAAS,iBAAiB,OAAO;AACnE,UAAI,iBAAiB,MAAM,gBAAgB,eAAe,MAAM,cAAc,QAAQ,MAAM;AAC5F,UAAI,aAAa,SAASA,YAAW,OAAO;AACxC,YAAI;AACJ,YAAI;AACJ,YAAI,gBAAgB,iBAAiB,eAAe,MAAM,MAAM,0BAA0B,OAAO,QAAQ,iBAAiB,SAAS,SAAS,aAAa,CAAC,OAAO,QAAQ,kBAAkB,SAAS,gBAAgB;AACpN,YAAI,iBAAiB;AAAM,iBAAO;AAClC,eAAO,WAAW,KAAK;AAAA,MAC3B;AACA,UAAI;AACJ,UAAI,UAAU,SAAS,MAAM,YAAY,OAAO,QAAQ,WAAW,SAAS,SAAS,CAAC;AACtF,qBAAe;AAAA,QACX,cAAc,SAAS,OAAOC,QAAO;AACjC,cAAI,WAAWA,OAAM;AACrB,iBAAO;AAAA,YACH,kBAAkB;AAAA,YAClB,kBAAkB;AAAA,UACtB;AAAA,QACJ;AAAA,MACJ,GAAG;AAAA,QACC,QAAQ;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AAAA,QACA,WAAW;AAAA,MACf,CAAC;AACD,mBAAa,KAAK,WAAW;AACzB,YAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAS,UAAU,CAAC,IAAI,IAAI,YAAY,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI,QAAQ;AAC3I,YAAI,SAAS,WAAW,KAAK;AAC7B,eAAO,WAAW,OAAO,cAAc,OAAO,aAAa,QAAQ,aAAa,SAAS,WAAW,IAAI,eAAe,EAAE,OAAO,OAAO,GAAG,IAAI,CAAC;AAAA,MACnJ,GAAG;AAAA,QACC;AAAA,QACA,MAAM,SAAS,KAAK,UAAU,UAAU;AACpC,cAAI,IAAI,WAAW,SAAS,KAAK;AACjC,cAAI,IAAI,WAAW,SAAS,KAAK;AACjC,cAAI,MAAM,QAAQ,MAAM;AAAM,mBAAO;AAErC,cAAI,IAAI,MAAM;AAAG,mBAAO,IAAI;AAC5B,cAAI;AACJ,cAAI,UAAU,qBAAqB,SAAS,cAAc,QAAQ,uBAAuB,SAAS,qBAAqB;AACvH,cAAI;AACJ,cAAI,UAAU,qBAAqB,SAAS,cAAc,QAAQ,uBAAuB,SAAS,qBAAqB;AAEvH,cAAI,WAAW,MAAM,WAAW,IAAI;AAChC,mBAAO;AAAA,UACX,WAAW,WAAW,MAAM,WAAW,IAAI;AACvC,mBAAO;AAAA,UACX;AAIA,iBAAO,OAAO,cAAc,QAAQ,MAAM;AAAA,YACtC,SAAS;AAAA,UACb,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL,GAAG;AAAA,MACC,OAAO;AAAA,QACH,YAAY;AAAA,UACR,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA;AAAA;",
  "names": ["parseValue", "param"]
}
